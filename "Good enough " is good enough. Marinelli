NEw Jersey approach "Worse is Better" vs MIT approach "The right THing"
Worse is Better:
- simplicity
  --implementation and interface
 --most important consideration in design

-corectness
--better be simple than correct
-consistence
--"not overly inconsistent"


Incremental developmeent is what we need.
"Anything worth doing is worth doing badly" because it will be deployed faster and solve users problem
Core bazaar idea "given enough eyeballs, all bugs are shallow"

What not to skimp on:
-light-weight agile process and its steps
--revision control system, code reviews, testing..
--proper release-engineering practices
-code-style, clarity, eleagance
-documentation

Must be from the start
-security, in the mast general sense, incl:
--privacy
--audibility

-many other things would be 'best' to have at the start but you CAN refactor later
--modularity plugins
--API
--scalability
-you CAN incur technical debt, __with care__

Focus on potencial errors that could cause irrecoverable lodded
--as long as one can recover its OK
--..in a beta at least
-is the reputational damage to yourself recoverable?
--it depends but most usually YES
---esp w courteuous speedy response to issuesthat get reported(=="service")
--"get it right the 2nd time" is usually OK

Customer service secret:
"Customer with the highest levels of satisfaction tend to be those who have had a problem resolved"

General vs ad-hoc solution:
-intuition tell us ad-hoc easier, faster
-reality: sometimes but not always(DRY)
